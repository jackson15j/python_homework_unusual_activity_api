# This is a basic workflow to help you get started with Actions
name: Build

# Controls when the workflow will run
on:
  push:
    branches:
    - '*'
    - '!main'
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that
# can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    permissions:
      # Raising permissions to write Test Results. See:
      # * https://docs.github.com/en/actions/using-jobs/assigning-permissions-to-jobs
      # * https://github.com/EnricoMi/publish-unit-test-result-action#permissions
      checks: write
      pull-requests: write

    # Steps represent a sequence of tasks that will be executed as part of the
    # job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can
      # access it
      - uses: actions/checkout@v4

      - name: Set up Python 3.12
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Create .venv
        run: make create-dev-venv
      - name: Deps - Install dependencies
        run: make install-deps

      - name: Deps - Install lint dependencies
        run: make install-lint-deps
      - name: Lint
        run: make lint

      - name: Deps - Install test dependencies
        run: make install-test-deps
      - name: Test
        run: make test
      - name: Publish - Test Results
        # Running with:
        # https://github.com/EnricoMi/publish-unit-test-result-action, instead
        # of: https://github.com/mikepenz/action-junit-report, due to:
        #
        # * Support for other test report types (even though most languages have
        #   some support for JUnit output).
        # * Native Permissions instead of requiring defining PAT for auth.
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          files: "build/test-reports/*.xml"

      - name: Deps - Install build dependencies
        run: make install-build-deps
      - name: Build - Python Package
        run: make build
